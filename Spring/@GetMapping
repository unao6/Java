package io.elice.elcademy.subject.controller;

import io.elice.elcademy.subject.entity.SubjectPatchDto;
import io.elice.elcademy.subject.entity.SubjectPostDto;
import io.elice.elcademy.subject.entity.Subject;
import io.elice.elcademy.subject.mapper.SubjectMapper;
import io.elice.elcademy.subject.service.SubjectService;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/subjects")
public class SubjectController {

    private final SubjectService subjectService;
    private final SubjectMapper mapper;

    

    public SubjectController(SubjectService subjectService, SubjectMapper mapper) {
        this.subjectService = subjectService;
        this.mapper = mapper;
    }
  
    //특정 과목의 상세 정보 조회
    @GetMapping("/{subjectId}")
    public ResponseEntity getById(@PathVariable Long subjectId) {
        Subject subject = subjectService.findSubject(subjectId);

        if(subject == null) {      //존재하지 않는 과목이 요청된 경우(404)
            return new ResponseEntity<>(HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<>(subject, HttpStatus.OK);
    }

    //모든 과목의 목록 조회
    //SubjectService를 사용하여 필요한 정보를 조회하고, 결과를 RespnseEntity 객체에 담아 반환
    @GetMapping()
    public ResponseEntity getAll() {
        List<Subject> subjects = subjectService.findSubjects();

        if(subjects.isEmpty()) {    //존재하지 않는 과목이 요청된 경우(404)
            return new ResponseEntity<>(HttpStatus.NOT_FOUND); 
        }
        return new ResponseEntity<>(subjects, HttpStatus.OK);
    }
}
